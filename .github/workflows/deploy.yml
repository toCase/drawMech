name: Github Actions with QT

on:
  push:    
    tags:
      - 'v*'

jobs:  

  build-and-package-macos:
      runs-on: macos-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install Qt
          run: |
            brew update
            brew install qt

        - name: Set up Qt environment
          run: |
            echo 'export PATH="/usr/local/opt/qt/bin:$PATH"' >> $GITHUB_ENV
            echo 'export QT_PLUGIN_PATH="/usr/local/opt/qt/plugins"' >> $GITHUB_ENV
            source $GITHUB_ENV

        - name: Configure Qt project
          run: |
            qmake app/app.pro
            echo "qmake completed"

        - name: Build Qt project
          run: |
            make > build_log.txt
            echo "Build log:"
            cat build_log.txt

        - name: Check build output directory
          run: |
            echo "Checking if release directory exists"
            if [ -d "release" ]; then
              echo "Listing release directory"
              ls -la release
            else
              echo "Release directory does not exist"
            fi

        - name: Move files to deploy folder
          run: |
            mkdir -p deploy
            echo "Moving files from release"
            cp -r release/* deploy/

        - name: Deploy Qt application
          run: |
            echo "Deploying application"
            # Add any additional deployment steps if needed

        - name: Create tar.gz archive
          run: tar -czvf application-macos.tar.gz -C deploy .

        - name: Upload tar.gz artifact
          uses: actions/upload-artifact@v4
          with:
            name: application-macos-tar
            path: application-macos.tar.gz

  build-and-package-linux:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y qt6-base-dev qt6-tools-dev qt6-tools-dev-tools

        - name: Set up Qt environment
          run: |
            echo 'export PATH=/usr/lib/qt6/bin:$PATH' >> $GITHUB_ENV
            source $GITHUB_ENV

        - name: Configure Qt project
          run: |
            /usr/lib/qt6/bin/qmake app/app.pro
            echo "qmake completed"

        - name: Build Qt project
          run: |
            make > build_log.txt
            echo "Build log:"
            cat build_log.txt

        - name: Check build output directory
          run: |
            echo "Checking if release directory exists"
            if [ -d "release" ]; then
              echo "Listing release directory"
              ls -la release
            else
              echo "Release directory does not exist"
            fi

        - name: Move files to deploy folder
          run: |
            mkdir -p deploy
            echo "Moving files from release"
            cp -r release/* deploy/

        - name: Deploy Qt application
          run: |
            echo "Deploying application"
            # Add any additional deployment steps if needed

        - name: Create tar.gz archive
          run: tar -czvf application-linux.tar.gz -C deploy .

        - name: Upload tar.gz artifact
          uses: actions/upload-artifact@v4
          with:
            name: application-linux-tar
            path: application-linux.tar.gz

  build-and-package-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSVC
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
            version: 6.7.0
            host: windows
            target: desktop
            arch: win64_msvc2019_64

      - name: Configure QT project
        run: |
          qmake app/app.pro
          echo "qmake completed"

      - name: Build QT project
        run: |
          nmake > build_log.txt
          echo "Build log:"
          type build_log.txt

      - name: Check build output directory
        run: |
          echo "Checking if release directory exists"
          if (Test-Path -Path "release") {
            echo "Listing release directory"
            Get-ChildItem -Path "release"
          } else {
            echo "Release directory does not exist"
          }

      - name: Move files to deploy folder
        run: |
          mkdir deploy
          echo "Moving files from release"
          Get-ChildItem -Path "release" -File | Copy-Item -Destination "deploy" -Force -ErrorAction SilentlyContinue
          # echo "Moving files from tests\base_test\release"
          # Get-ChildItem -Path "tests\base_test\release" -File | Copy-Item -Destination "deploy" -Force -ErrorAction SilentlyContinue
          # echo "Moving files from tests\ui_test\release"
          # Get-ChildItem -Path "tests\ui_test\release" -File | Copy-Item -Destination "deploy" -Force -ErrorAction SilentlyContinue
          # echo "Copying samples directory"
          # xcopy /E /I "samples" "deploy\samples\"

      - name: Deploy QT application
        run: |
          windeployqt --release deploy/app.exe

      # - name: Run tests
      #   run: |
      #     cd deploy
      #     ./base_test.exe
      #     ./ui_test.exe

      - name: Create zip archive
        run: 7z a application-windows.zip ./deploy/*

      - name: Upload zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-windows-zip
          path: application-windows.zip
