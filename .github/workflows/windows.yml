name: Windows Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on tags like v1.0.0, v1.2.3
  pull_request:
    branches:
      - main
    
env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.7.0
  ARTIFACT:     DrawProject-build.zip

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ env.QT_VERSION }}
        host: windows
        target: desktop
        arch: win64_msvc2019_64
        dir: ${{ runner.temp }}
        modules: qtcharts qt3d
        setup-python: false
    
    - name: Download JOM
      uses: suisei-cn/actions-download-file@v1
      with:
        url:    http://download.qt.io/official_releases/jom/jom.zip
        target: ${{ runner.temp }}\

    - name: Unzip JOM
      working-directory: ${{ runner.temp }}
      run:  |
          7z x jom.zip -ojom
    
    - name: Set up Visual Studio shell
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    
    - name: Create build directory
      run:  mkdir ${{ runner.temp }}\build

    - name: Configure and build project
      working-directory: ${{ runner.temp }}\build
      run: |
        # cd drawMech
        qmake -r ${{ env.SOURCE_DIR }}\DrawProject.pro
        ${{ runner.temp }}\jom\jom -j2
        
        cd release
        windeployqt --qmldir ${{ env.SOURCE_DIR }} DrawProject.exe 
        copy C:\Windows\System32\concrt140.dll .
        copy C:\Windows\System32\vccorlib140.dll .
        copy C:\Windows\System32\msvcp140.dll .
        copy C:\Windows\System32\vcruntime140.dll .

    - name: Zip build
      run: 7z a ${{ runner.temp }}\${{ env.ARTIFACT }} ${{ runner.temp }}\build\* -r

    - name: Save build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT }}
        path: ${{ runner.temp }}\${{ env.ARTIFACT }}